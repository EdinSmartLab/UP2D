
# These predefined variables may be set in the Makefile
#
# EXECUTABLE        name of final program
# LINKER            set this if the linker is different from the compiler
# LINKFLAGS         extra flags to pass to the linker
# FREEFLAGS         extra flags for compiling free form files
# FIXEDFLAGS        extra flags for compiling fixed form files
# PREFIXEDFLAGS     extra flags for compiling fixed form files with preprocessing directives
# PREFREEFLAGS      extra flags for compiling free form files with preprocessing directives
# ORGSRCDIR         build project from all files in $(ORGSRCDIR)/.files and SOURCEFILES, where files
#                   in the latter override files in the former

## get the list of object files

include .mkdep_objects

## if EXECUTABLE or FORTRANCOMPILER is not set, default

ifeq ($(strip $(EXECUTABLE)),)
   EXECUTABLE=a.out
endif
ifeq ($(strip $(FORTRANCOMPILER)),)
   FORTRANCOMPILER=gfortran
endif
ifeq ($(strip $(LINKER)),)
   LINKER=$(FORTRANCOMPILER)
endif

## the link happen here
$(EXECUTABLE):$(OBJS)
	$(LINKER) -o $(EXECUTABLE) $(OBJS) $(LINKFLAGS)

## get the autogenerated dependencies

include .mkdep_dependencies

## delete object files (keep mkdep stuff)
clean:
	rm -f build/*.mod *.mod *~ $(EXECUTABLE) $(MAINLIB)
	rmobjs .mkdep_objects
	mkdep reset
	make dep

## (re)generate dependencies
dep:
	echo "" > .files
	for dir in $(SOURCEFILES); do \
	   echo -e "$$dir" >> .files ; \
	done
	for dir in $(SOURCEFILES2); do \
	   echo -e "$$dir OPT2" >> .files ; \
	done
	if [ "$(strip $(ORGSRCDIR))" != "" ] ; then \
	   echo $(ORGSRCDIR) > .incdirs ;\
	   echo "." >> .incdirs ;\
	   mergedotfiles $(ORGSRCDIR) ;\
	else \
	   echo "." > .incdirs ;\
	   mergedotfiles NOORGSRCDIR ;\
	fi
	mkdep -i .incdirs .files

## explicit rules for each and every file
include .mkdep_rules

